<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="utf-8">
  <title>Treebeard</title>
  <meta name="description" content="A cross between a forum and a chatroom. Lets you see the conversation develop chronologically, or see who is talking to who.">
  <meta name="author" content="Sirius A Strebe">

  <!-- yahoo css reset -->
  <link rel="stylesheet" type="text/css" href="http://yui.yahooapis.com/3.13.0/build/cssreset/cssreset-min.css">

  <!-- styles -->
  <link href="/css/css.css" rel="stylesheet" />

  <link href="http://netdna.bootstrapcdn.com/font-awesome/4.0.3/css/font-awesome.css" rel="stylesheet" />

  <!-- JS Libraries -->
  <script type='text/javascript' src='http://code.jquery.com/jquery-1.10.1.min.js'></script>
  <script type='text/javascript' src="//cdn.jsdelivr.net/jquery.cookie/1.4.0/jquery.cookie.js"></script>
  <script type='text/javascript' src='https://ajax.googleapis.com/ajax/libs/angularjs/1.3.5/angular.js'></script>
  <script type='text/javascript' src='http://cdnjs.cloudflare.com/ajax/libs/angular.js/1.3.3/angular-animate.min.js'></script>
  <script type='text/javascript' src="/socket.io/socket.io.js"></script>
  <script type='text/javascript' src="/syc.js"></script>

  <script type="text/javascript">
    var APP = angular.module( 'convo', ['ngAnimate'],
        // This is here because recursively using ng-templates
        // will cause an infinite digest error if the depth of the
        // recursion exceeds the digest limit. This allows a max
        // depth of ~ 47.
        function ($rootScopeProvider) {
          $rootScopeProvider.digestTtl(50);
        }
    );

    var IO = io.connect(),
        SESSIONID = findSID(), 
        LOGIN = {status: 'participant', username: randomUsername()};

    Syc.connect(IO);
 
    function findSID ()  {
      return $.cookie('connect.sid'); 
    }

    function randomUsername () { 
      var names = ['Annonymous Andy', 'Bad Betty', 'Catty Cathy', 'Debbie Downer', 'Even Steven', 'Fat Freddie', 'George', 'Halitosis Haley', 'Irridescent Indie', 'Jerky Jerry', 'Killer Kat', 'Lemon', 'Matt Damon', 'Nutters', 'Oprah', 'Porcupine', 'Q-tip', 'Ronny', 'Stewie', 'Tux', 'Capt\' undie', 'Voluptua', 'Wanda', 'Xena the Princess Warrior', 'Yodle', 'Zombocom'];

      return names[Math.floor(Math.random() * names.length)];
    }


    IO.on('connect', function () {
      IO.emit('identifyMe', {sessionID: SESSIONID});
    });
  </script>




</head>
<body ng-app="convo">

  <!-- Nav menu -->
  <div ng-controller="NavController" ng-hide="view === 'none'">
    <nav class="fadeable" ng-fade="!nav" ng-mouseleave="delayedNavHide()" ng-mouseenter="resetDelayHide()">
      <div id="user">
        <a ng-click="changeUsername()">{{username}}</a>
      </div>
      <a href="/">
        <div id="homeButton"> 
         Treebeard 
        </div>
      </a>
      <div id="views">
        <a ng-href="##tree"><i class="fa fa-sitemap fa-3x" ng-class="{selected:view==='tree'}"></i></a>
        <a ng-href="##flow"><i class="fa fa-leaf fa-3x" ng-class="{selected: view==='flow'}"></i></a>
        <a ng-href="##forum"><i class="fa fa-align-justify fa-3x" ng-class="{selected: view==='forum'}"></i></a>
      </div>
    </nav>
  
    <div id="icon" class="fadeable" ng-fade="!icon" ng-switch on="view" ng-click="showNav()">
      <i class="fa fa-sitemap fa-3x" ng-switch-when="tree"></i>
      <i class="fa fa-leaf fa-3x" ng-switch-when="flow"></i>
      <i class="fa fa-align-justify fa-3x" ng-switch-when="forum"></i>
    </div>
  </div>


  <!-- Content -->
  <%- body %>


  <!-- Login -->
  <div ng-controller="LoginController" ng-show='loginShowing' id="login" ng-click="hideLogin()">
    <form ng-submit="login()" ng-click="$event.stopPropagation()">
      <input type="text" ng-model='username' placeholder="Pick a username" />
      <input type='submit' value="Login"></input><i class="fa fa-key" id="key"></i>
    </form>
  </div>

  <div ng-controller="ErrorController" ng-show="errorShowing" id="error" ng-click="errorShowing = !errorShowing">
    <form ng-submit="continue()" ng-click="$event.stopPropagation()"> 
      <div>{{errorMessage}}</div>
      <div>Contact <a href="mailto:SiriusAStrebe@gmail.com">SiriusAStrebe@gmail.com</a></div>
      <input type='submit' value="I understand..."></input>
    </form>
  </div>

  <footer></footer>

  <script type="text/javascript">
    APP.service('TreeService', function () {
        this.Trees = {};
        
        var _this = this;
        
        this.plantTree = function (name, tree) { 
            _this.Trees[name] = tree;
        }
    });
    
    APP.controller('ErrorController', ['$scope', '$rootScope', function ($scope, $rootScope) { 
      $scope.errorShowing = false;

      IO.on('error', function (data) { 
        $scope.$apply( function () { 
          if (data.msg !== 'undefined') 
            $scope.errorMessage = data.msg;
          else
            $scope.errorMessage = data;
          $scope.errorShowing = true;
        });
      });

      $scope.continue = function () { 
        $scope.errorShowing = false;
      }
    }]);

    APP.controller('LoginController', ['$scope', '$rootScope', function ($scope, $rootScope) { 
      $scope.loginShowing = false;

      $scope.login = function () { 
         username = $scope.username;
         LOGIN.username = username;
         $rootScope.$emit('changedUsername');
         $scope.loginShowing = false;
      };

      $scope.hideLogin = function () { 
        $scope.loginShowing = false;
      }

      $rootScope.$on('showLogin', function () { 
        $scope.loginShowing = true;
      });

      $rootScope.$on('hideLogin', function () {
        $scope.loginShowing = false;
      });
    }]);


 
  // --------------------------------
  // Navigational menu
  // --------------------------------
  APP.controller('NavController', ['$scope', '$timeout', '$location', '$rootScope', function ($scope, $timeout, $location, $rootScope) {
    $scope.icon = true;
    $scope.nav  = false;

    $scope.view;

    $scope.showNav = function () { 
      $scope.nav  = true;
      $scope.icon = false;
    }

    $scope.username = LOGIN.username;

    $scope.changeUsername = function () { 
      $rootScope.$emit('showLogin');
    }
    $rootScope.$on('changedUsername', function () {
      $scope.username = LOGIN.username;
    });

    var timeoutId;
    $scope.delayedNavHide = function () {
      timeoutId = $timeout( function () {
        $scope.nav = false;
        $timeout( function () {
          $scope.icon = true;
        }, 400);
      }, 2000);
    }

    $scope.resetDelayHide = function () {
      $timeout.cancel(timeoutId);
    }  

    // --------------------------------
    // Tree/List View control
    // --------------------------------
    // TODO: this code violates DRY in /views/layout.ejs
    $scope.$on("$locationChangeStart", function (event, next, current) { 
      if ($location.hash() === 'forum') { 
        $scope.view = 'forum';
      }
      else if ($location.hash() === 'flow') { 
        $scope.view = 'flow';
      }
      else if ($location.hash() === 'tree') { 
        $scope.view = 'tree';
      }
      else {
        if (document.location.pathname === '/' || document.location.pathname === '') {
          $scope.view = 'none';
        }
        else  {
          $scope.view = 'flow';
        }
      }
    });
  }]);

  /*                      */
  /*      Directives      */
  /*                      */
  // Fade animation
  APP.directive('ngFade', function ($animate, $timeout) { 
    return function (scope, element, attrs) {
      scope.$watch(attrs.ngFade, function (ngFade) { 
        if (ngFade) {
          $animate.addClass(element, 'fade');
          $timeout(function () { 
            if (element.hasClass('fade') && !element.hasClass('hidden')) // Check if we're still fading
              $animate.addClass(element, 'hidden');
          }, 1000);
        } else { 
          $animate.removeClass(element, 'hidden');
          // Required due to a CSS bug of not fading in if immediately unhidden
          $timeout(function () { 
            if (!element.hasClass('hidden'))
              $animate.removeClass(element, 'fade');
          }, 200)
        }
      });
    }
  });


  </script>

</body>
</html>
